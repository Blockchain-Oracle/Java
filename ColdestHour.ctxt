#BlueJ class context
comment0.target=ColdestHour
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=location
comment10.target=void\ testIsLowest(java.lang.String)
comment11.params=
comment11.target=void\ testIsLowestFiles()
comment12.params=humdity\ location
comment12.target=void\ testAverageTemperatureWithHighHumidityInFile(double,\ java.lang.String)
comment13.params=location
comment13.target=void\ testAverageTemperature(java.lang.String)
comment14.params=location
comment14.target=void\ testLowestHumdity(java.lang.String)
comment15.params=
comment15.target=void\ testLowestHumdityFiles()
comment2.params=parser
comment2.target=org.apache.commons.csv.CSVRecord\ coldestHour(org.apache.commons.csv.CSVParser)
comment3.params=currRecord\ lowest
comment3.target=org.apache.commons.csv.CSVRecord\ isLowest(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment4.params=
comment4.target=org.apache.commons.csv.CSVRecord\ coldestHourInFiles()
comment5.params=currRecord\ lowest
comment5.target=org.apache.commons.csv.CSVRecord\ isLowestHumidity(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumdity(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityFiles()
comment8.params=parser
comment8.target=double\ averageTemperature(org.apache.commons.csv.CSVParser)
comment9.params=parser\ graterValue
comment9.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ double)
numComments=16
